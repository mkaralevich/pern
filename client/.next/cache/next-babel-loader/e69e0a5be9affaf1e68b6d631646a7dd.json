{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/maksim.karalevich/Code/-sketches/pern-app/client/components/TodoEdit.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Fragment, useState } from \"react\";\nexport default function TodoEdit(_ref) {\n  _s();\n\n  var todo = _ref.todo;\n\n  var _useState = useState(todo.description),\n      description = _useState[0],\n      setDescription = _useState[1];\n\n  var updateTodo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(todo) {\n      var body, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              body = todo.description;\n              console.log(todo.description);\n              _context.next = 5;\n              return fetch(\"http://localhost:5000/todos/\".concat(todo.todo_id), {\n                method: \"PUT\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(body)\n              });\n\n            case 5:\n              response = _context.sent;\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function updateTodo(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, __jsx(\"input\", {\n    defaultValue: description,\n    onChange: function onChange(e) {\n      return setDescription(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return updateTodo(todo);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }, \"Edit\"));\n}\n\n_s(TodoEdit, \"8+7bLWetC2qBum+Uv3xZAs90PS0=\");\n\n_c = TodoEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoEdit\");","map":{"version":3,"sources":["/Users/maksim.karalevich/Code/-sketches/pern-app/client/components/TodoEdit.js"],"names":["React","Fragment","useState","TodoEdit","todo","description","setDescription","updateTodo","body","console","log","fetch","todo_id","method","headers","JSON","stringify","response","error","e","target","value"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AAEA,eAAe,SAASC,QAAT,OAA4B;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,kBACJF,QAAQ,CAACE,IAAI,CAACC,WAAN,CADJ;AAAA,MACnCA,WADmC;AAAA,MACtBC,cADsB;;AAG1C,MAAMC,UAAU;AAAA,yEAAG,iBAAOH,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEXI,cAAAA,IAFW,GAEJJ,IAAI,CAACC,WAFD;AAGjBI,cAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACC,WAAjB;AAHiB;AAAA,qBAKMM,KAAK,uCACIP,IAAI,CAACQ,OADT,GAE3B;AACCC,gBAAAA,MAAM,EAAE,KADT;AAECC,gBAAAA,OAAO,EAAE;AAAE,kCAAgB;AAAlB,iBAFV;AAGCN,gBAAAA,IAAI,EAAEO,IAAI,CAACC,SAAL,CAAeR,IAAf;AAHP,eAF2B,CALX;;AAAA;AAKXS,cAAAA,QALW;AAAA;AAAA;;AAAA;AAAA;AAAA;AAcjBR,cAAAA,OAAO,CAACS,KAAR;;AAdiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVX,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAiBA,SACC,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAO,IAAA,YAAY,EAAEF,WAArB;AAAkC,IAAA,QAAQ,EAAE,kBAACc,CAAD;AAAA,aAAOb,cAAc,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAArB;AAAA,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMd,UAAU,CAACH,IAAD,CAAhB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,CADD;AAMA;;GA1BuBD,Q;;KAAAA,Q","sourcesContent":["import React, { Fragment, useState } from \"react\";\n\nexport default function TodoEdit({ todo }) {\n\tconst [description, setDescription] = useState(todo.description);\n\n\tconst updateTodo = async (todo) => {\n\t\ttry {\n\t\t\tconst body = todo.description;\n\t\t\tconsole.log(todo.description);\n\n\t\t\tconst response = await fetch(\n\t\t\t\t`http://localhost:5000/todos/${todo.todo_id}`,\n\t\t\t\t{\n\t\t\t\t\tmethod: \"PUT\",\n\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\tbody: JSON.stringify(body),\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t};\n\treturn (\n\t\t<Fragment>\n\t\t\t<input defaultValue={description} onChange={(e) => setDescription(e.target.value)} />\n\t\t\t<button onClick={() => updateTodo(todo)}>Edit</button>\n\t\t</Fragment>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}