{"ast":null,"code":"var _jsxFileName = \"/Users/maksim.karalevich/Code/-sketches/pern-app/client/components/TodoEdit.js\";\nvar __jsx = React.createElement;\nimport React, { Fragment, useState } from \"react\";\nexport default function TodoEdit({\n  todo\n}) {\n  const {\n    0: description,\n    1: setDescription\n  } = useState(todo.description);\n\n  const updateTodo = async todo => {\n    try {\n      const body = todo.description;\n      console.log(todo.description);\n      const response = await fetch(`http://localhost:5000/todos/${todo.todo_id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, __jsx(\"input\", {\n    defaultValue: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }), __jsx(\"button\", {\n    onClick: () => updateTodo(todo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }\n  }, \"Edit\"));\n}","map":{"version":3,"sources":["/Users/maksim.karalevich/Code/-sketches/pern-app/client/components/TodoEdit.js"],"names":["React","Fragment","useState","TodoEdit","todo","description","setDescription","updateTodo","body","console","log","response","fetch","todo_id","method","headers","JSON","stringify","err","error","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AAEA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AAC1C,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCJ,QAAQ,CAACE,IAAI,CAACC,WAAN,CAA9C;;AAEA,QAAME,UAAU,GAAG,MAAOH,IAAP,IAAgB;AAClC,QAAI;AACH,YAAMI,IAAI,GAAGJ,IAAI,CAACC,WAAlB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACC,WAAjB;AAEA,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+BAA8BR,IAAI,CAACS,OAAQ,EADjB,EAE3B;AACCC,QAAAA,MAAM,EAAE,KADT;AAECC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFV;AAGCP,QAAAA,IAAI,EAAEQ,IAAI,CAACC,SAAL,CAAeT,IAAf;AAHP,OAF2B,CAA5B;AAQA,KAZD,CAYE,OAAOU,GAAP,EAAY;AACbT,MAAAA,OAAO,CAACU,KAAR,CAAcD,GAAd;AACA;AACD,GAhBD;;AAiBA,SACC,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAO,IAAA,YAAY,EAAEb,WAArB;AAAkC,IAAA,QAAQ,EAAGe,CAAD,IAAOd,cAAc,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAQ,IAAA,OAAO,EAAE,MAAMf,UAAU,CAACH,IAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,CADD;AAMA","sourcesContent":["import React, { Fragment, useState } from \"react\";\n\nexport default function TodoEdit({ todo }) {\n\tconst [description, setDescription] = useState(todo.description);\n\n\tconst updateTodo = async (todo) => {\n\t\ttry {\n\t\t\tconst body = todo.description;\n\t\t\tconsole.log(todo.description);\n\n\t\t\tconst response = await fetch(\n\t\t\t\t`http://localhost:5000/todos/${todo.todo_id}`,\n\t\t\t\t{\n\t\t\t\t\tmethod: \"PUT\",\n\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\tbody: JSON.stringify(body),\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t};\n\treturn (\n\t\t<Fragment>\n\t\t\t<input defaultValue={description} onChange={(e) => setDescription(e.target.value)} />\n\t\t\t<button onClick={() => updateTodo(todo)}>Edit</button>\n\t\t</Fragment>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}