{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/maksim.karalevich/Code/-sketches/pern-app/client/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Fragment, useState, useEffect } from \"react\";\nexport default function TodoList() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      todos = _useState[0],\n      setTodos = _useState[1];\n\n  var getTodos = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, jsonData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"http://localhost:5000/todos\");\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              jsonData = _context.sent;\n              setTodos(jsonData);\n              console.log(jsonData);\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0.message);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function getTodos() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getTodos();\n  });\n  var allTodos = todos.map(function (todo) {\n    __jsx(React.Fragment, null, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 4\n      }\n    }, todo.id), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 4\n      }\n    }, todo.description));\n  });\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, allTodos);\n}\n\n_s(TodoList, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/maksim.karalevich/Code/-sketches/pern-app/client/components/TodoList.js"],"names":["React","Fragment","useState","useEffect","TodoList","todos","setTodos","getTodos","fetch","response","json","jsonData","console","log","error","message","allTodos","map","todo","id","description"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AAAA,kBACRF,QAAQ,CAAC,EAAD,CADA;AAAA,MAC3BG,KAD2B;AAAA,MACpBC,QADoB;;AAGlC,MAAMC,QAAQ;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEQC,KAAK,CAAC,6BAAD,CAFb;;AAAA;AAETC,cAAAA,QAFS;AAAA;AAAA,qBAGQA,QAAQ,CAACC,IAAT,EAHR;;AAAA;AAGTC,cAAAA,QAHS;AAIfL,cAAAA,QAAQ,CAACK,QAAD,CAAR;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AALe;AAAA;;AAAA;AAAA;AAAA;AAOfC,cAAAA,OAAO,CAACE,KAAR,CAAc,YAAIC,OAAlB;;AAPe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARR,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAWAJ,EAAAA,SAAS,CAAC,YAAM;AACfI,IAAAA,QAAQ;AACR,GAFQ,CAAT;AAIA,MAAMS,QAAQ,GAAGX,KAAK,CAACY,GAAN,CAAU,UAACC,IAAD,EAAU;AACpC,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,IAAI,CAACC,EAAX,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,IAAI,CAACE,WAAX,CAFD;AAIA,GALgB,CAAjB;AAMA,SAAO,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWJ,QAAX,CAAP;AACA;;GAzBuBZ,Q;;KAAAA,Q","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\n\nexport default function TodoList() {\n\tconst [todos, setTodos] = useState([]);\n\n\tconst getTodos = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(\"http://localhost:5000/todos\");\n\t\t\tconst jsonData = await response.json();\n\t\t\tsetTodos(jsonData);\n\t\t\tconsole.log(jsonData);\n\t\t} catch (err) {\n\t\t\tconsole.error(err.message);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetTodos();\n\t});\n\n\tconst allTodos = todos.map((todo) => {\n\t\t<>\n\t\t\t<div>{todo.id}</div>\n\t\t\t<div>{todo.description}</div>\n\t\t</>;\n\t});\n\treturn <Fragment>{allTodos}</Fragment>;\n}\n"]},"metadata":{},"sourceType":"module"}