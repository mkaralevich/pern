{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/maksim.karalevich/Code/-sketches/pern-app/client/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Fragment, useState, useEffect } from \"react\";\nexport default function TodoList() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      todos = _useState[0],\n      setTodos = _useState[1];\n\n  var getTodos = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, jsonData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"http://localhost:5000/todos\");\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              jsonData = _context.sent;\n              setTodos(jsonData);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0.message);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function getTodos() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getTodos();\n  }, []);\n\n  var updateTodo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(todo) {\n      var body, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              body = todo.description;\n              console.log(body);\n              _context2.next = 5;\n              return fetch(\"http://localhost:5000/todos/\".concat(todo.todo_id), {\n                method: \"PUT\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(body)\n              });\n\n            case 5:\n              response = _context2.sent;\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    return function updateTodo(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var deleteTodo = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return fetch(\"http://localhost:5000/todos/\".concat(id), {\n                method: \"DELETE\"\n              });\n\n            case 3:\n              response = _context3.sent;\n              setTodos(todos.filter(function (todo) {\n                return todo.todo_id !== id;\n              }));\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error(_context3.t0.message);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    return function deleteTodo(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var allTodos = todos.map(function (todo, key) {\n    return __jsx(\"div\", {\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 4\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, todo.todo_id), __jsx(\"input\", {\n      defaultValue: todo.description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }), __jsx(\"button\", {\n      onClick: function onClick() {\n        return updateTodo(todo);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, \"Edit\"), __jsx(\"button\", {\n      onClick: function onClick() {\n        return deleteTodo(todo.todo_id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, \"Delete\"));\n  });\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }\n  }, \"todos:\"), allTodos);\n}\n\n_s(TodoList, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/maksim.karalevich/Code/-sketches/pern-app/client/components/TodoList.js"],"names":["React","Fragment","useState","useEffect","TodoList","todos","setTodos","getTodos","fetch","response","json","jsonData","console","error","message","updateTodo","todo","body","description","log","todo_id","method","headers","JSON","stringify","deleteTodo","id","filter","allTodos","map","key"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\n\nexport default function TodoList() {\n\tconst [todos, setTodos] = useState([]);\n\n\tconst getTodos = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(\"http://localhost:5000/todos\");\n\t\t\tconst jsonData = await response.json();\n\t\t\tsetTodos(jsonData);\n\t\t} catch (err) {\n\t\t\tconsole.error(err.message);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetTodos();\n\t}, []);\n\n\tconst updateTodo = async (todo) => {\n\t\ttry {\n\t\t\tconst body = todo.description;\n\t\t\tconsole.log(body);\n\n\t\t\tconst response = await fetch(\n\t\t\t\t`http://localhost:5000/todos/${todo.todo_id}`,\n\t\t\t\t{\n\t\t\t\t\tmethod: \"PUT\",\n\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\tbody: JSON.stringify(body),\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t};\n\n\tconst deleteTodo = async (id) => {\n\t\ttry {\n\t\t\tconst response = await fetch(`http://localhost:5000/todos/${id}`, {\n\t\t\t\tmethod: \"DELETE\",\n\t\t\t});\n\t\t\tsetTodos(todos.filter((todo) => todo.todo_id !== id));\n\t\t} catch (err) {\n\t\t\tconsole.error(err.message);\n\t\t}\n\t};\n\n\tconst allTodos = todos.map((todo, key) => {\n\t\treturn (\n\t\t\t<div key={key}>\n\t\t\t\t<div>{todo.todo_id}</div>\n\t\t\t\t<input defaultValue={todo.description} />\n\t\t\t\t<button onClick={() => updateTodo(todo)}>Edit</button>\n\t\t\t\t<button onClick={() => deleteTodo(todo.todo_id)}>Delete</button>\n\t\t\t</div>\n\t\t);\n\t});\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1>todos:</h1>\n\t\t\t{allTodos}\n\t\t</Fragment>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}